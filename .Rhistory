install.packages("rvest")
library(rvest)
lego_movie <- html("http://www.imdb.com/title/tt1490017/")
library(rvest)
lego_movie <- read_html("http://www.imdb.com/title/tt1490017/")
;
lego_movie <- read_html("http://www.imdb.com/title/tt1490017/")
+
++
a=)
a=0
lego_movie <- read_html("https://stats.nba.com/")
q
lego_movie
source('~/Downloads/RTutorial/1-data-viz-and-manipulation.r', echo=TRUE)
source('~/Downloads/RTutorial/1-data-viz-and-manipulation.r', echo=TRUE)
source('~/Downloads/RTutorial/1-data-viz-and-manipulation.r', echo=TRUE)
source('~/Downloads/RTutorial/1-data-viz-and-manipulation.r', echo=TRUE)
source('~/Downloads/RTutorial/1-data-viz-and-manipulation.r', echo=TRUE)
source('~/Downloads/RTutorial/1-data-viz-and-manipulation.r', echo=TRUE)
source('~/Downloads/RTutorial/1-data-viz-and-manipulation.r', echo=TRUE)
source('~/Downloads/RTutorial/1-data-viz-and-manipulation.r', echo=TRUE)
source('~/Downloads/RTutorial/1-data-viz-and-manipulation.r', echo=TRUE)
source('~/Downloads/RTutorial/1-data-viz-and-manipulation.r', echo=TRUE)
source('~/Downloads/RTutorial/1-data-viz-and-manipulation.r', echo=TRUE)
source('~/Downloads/RTutorial/1-data-viz-and-manipulation.r', echo=TRUE)
source('~/Downloads/RTutorial/1-data-viz-and-manipulation.r', echo=TRUE)
source('~/Downloads/RTutorial/1-data-viz-and-manipulation.r', echo=TRUE)
source('~/Downloads/RTutorial/1-data-viz-and-manipulation.r', echo=TRUE)
source('~/Downloads/RTutorial/1-data-viz-and-manipulation.r', echo=TRUE)
source('~/Downloads/RTutorial/1-data-viz-and-manipulation.r', echo=TRUE)
source('~/Downloads/RTutorial/1-data-viz-and-manipulation.r', echo=TRUE)
source('~/Downloads/RTutorial/1-data-viz-and-manipulation.r', echo=TRUE)
source('~/Downloads/RTutorial/1-data-viz-and-manipulation.r', echo=TRUE)
source('~/Downloads/RTutorial/1-data-viz-and-manipulation.r', echo=TRUE)
source('~/Downloads/RTutorial/1-data-viz-and-manipulation.r', echo=TRUE)
source('~/Downloads/RTutorial/1-data-viz-and-manipulation.r', echo=TRUE)
source('~/Downloads/RTutorial/1-data-viz-and-manipulation.r', echo=TRUE)
install.packages("dplyr")
### HW2 Problem 1
yards_away = c(1, 2, 3)
expected_point_diff = c(5.25, 2.1, -0.7)
plot(yards_away, expected_point_diff)
### HW2 Problem 2
rounds = seq(1:25)
probabilities = c()
for(round in rounds){
max_j = 1.0*(round-1)/11
possible_j = seq(0, max_j)
#print(round)
#print(possible_j)
prob = 0
for(j in possible_j){
binom_coeff = factorial(round)/(factorial(round - j)*factorial(j))
prob = prob + 1.0 * binom_coeff * (0.2**j) * (0.8**(round - j))
}
probabilities = c(probabilities, prob)
}
probabilities
plot(rounds, probabilities)
### HW2 Problem 2
rounds = seq(1:25)
probabilities = c()
for(round in rounds){
max_j = 1.0*(round-1)/11
possible_j = seq(0, max_j)
#print(round)
#print(possible_j)
prob = 0
for(j in possible_j){
binom_coeff = factorial(round)/(factorial(round - j)*factorial(j))
prob = prob + 1.0 * binom_coeff * (0.2**j) * (0.8**(round - j))
}
probabilities = c(probabilities, prob)
}
probabilities
plot(rounds, probabilities)
results = "1 1 1744.09390682
1 2 2279.31154391
1 3 2142.57183041
1 4 2873.79308914
1 5 3564.54992407
1 6 2291.48594602
1 7 2060.01045777
1 8 1861.032557
1 9 5283.00499173
1 10 1762.0097974
2 1 1575.96584298
2 2 1851.94917527
2 3 1770.9125432
2 4 2720.71662072
2 5 2982.34496516
2 6 1950.03546828
2 7 1796.54101492
2 8 1632.02615988
2 9 5755.3593776
2 10 1534.18283575
3 1 1523.99381145
3 2 1676.16599063
3 3 1648.46504853
3 4 2697.20106577
3 5 2737.44208743
3 6 1800.1825684
3 7  1694.79114695
3 8 1555.439385
3 9 6133.02819628
3 10 1471.09253089
4 1 1491.66272181
4 2 1591.70575875
4 3 1608.31378876
4 4 2690.61453045
4 5 2620.40067677
4 6 1721.54633264
4 7 1646.39806872
4 8 1521.64993715
4 9 6356.15063867
4 10 1446.98490024
5 1 1462.74303653
5 2 1545.55336798
5 3 1597.45311363
5 4 2681.90647774
5 5 2557.73975243
5 6 1673.50336232
5 7 1618.98698764
5 8 1502.2738933
5 9 6469.41910138
5 10 1432.18068697"
split_res = unlist(strsplit(result, " "))
split_res = unlist(strsplit(results, " "))
split_res
split_res = unlist(strsplit(results, "\n"))
split_res
split_res = unlist(strsplit(results, "\n"))
vec = c()
for(item in split_res){
split_item = unlist(strsplit(item, " "))
vec = c(vec, split_item)
}
vec
seq(length(vec))
seq(length(vec), 3)
seq(3, length(vec), 3)
for(i in seq(length(vec))){
if(i %% 3 == 0){
value = c(value, item)
} else if(i %% 3 == 1) {
tree = c(tree, item)
} else {
subset = c(subset, item)
}
}
tree = c()
subset = c()
value = c()
for(i in seq(length(vec))){
if(i %% 3 == 0){
value = c(value, item)
} else if(i %% 3 == 1) {
tree = c(tree, item)
} else {
subset = c(subset, item)
}
}
tree
tree = c()
subset = c()
value = c()
for(item in vec){
if(i %% 3 == 0){
value = c(value, item)
} else if(i %% 3 == 1) {
tree = c(tree, item)
} else {
subset = c(subset, item)
}
}
tree
tree = c()
subset = c()
value = c()
for(i in seq(length(vec))){
if(i %% 3 == 0){
value = c(value, vec[i])
} else if(i %% 3 == 1) {
tree = c(tree, vec[i])
} else {
subset = c(subset, vec[i])
}
}
tree
subset
value
vec
split_res = unlist(strsplit(results, "\n"))
vec = c()
for(item in split_res){
split_item = unlist(strsplit(item, " "))
if(length(split_item) > 2){
vec = c(vec, split_item)
}
}
vec
results = "1 1 1744.09390682
1 2 2279.31154391
1 3 2142.57183041
1 4 2873.79308914
1 5 3564.54992407
1 6 2291.48594602
1 7 2060.01045777
1 8 1861.032557
1 9 5283.00499173
1 10 1762.0097974
2 1 1575.96584298
2 2 1851.94917527
2 3 1770.9125432
2 4 2720.71662072
2 5 2982.34496516
2 6 1950.03546828
2 7 1796.54101492
2 8 1632.02615988
2 9 5755.3593776
2 10 1534.18283575
3 1 1523.99381145
3 2 1676.16599063
3 3 1648.46504853
3 4 2697.20106577
3 5 2737.44208743
3 6 1800.1825684
3 7 1694.79114695
3 8 1555.439385
3 9 6133.02819628
3 10 1471.09253089
4 1 1491.66272181
4 2 1591.70575875
4 3 1608.31378876
4 4 2690.61453045
4 5 2620.40067677
4 6 1721.54633264
4 7 1646.39806872
4 8 1521.64993715
4 9 6356.15063867
4 10 1446.98490024
5 1 1462.74303653
5 2 1545.55336798
5 3 1597.45311363
5 4 2681.90647774
5 5 2557.73975243
5 6 1673.50336232
5 7 1618.98698764
5 8 1502.2738933
5 9 6469.41910138
5 10 1432.18068697"
split_res = unlist(strsplit(results, "\n"))
vec = c()
for(item in split_res){
split_item = unlist(strsplit(item, " "))
vec = c(vec, split_item)
}
tree = c()
subset = c()
value = c()
for(i in seq(length(vec))){
if(i %% 3 == 0){
value = c(value, vec[i])
} else if(i %% 3 == 1) {
tree = c(tree, vec[i])
} else {
subset = c(subset, vec[i])
}
}
tree
subset
value
df = data.frame(tree, subset, value)
df
library(dplyr)
df = data.frame(tree, subset, value)
df = df %>%
group_by(tree) %>%
summarise(avg_error = mean(value))
df = data.frame(tree, subset, value)
df = df %>%
group_by(tree) %>%
summarise(avg_error = mean(as.numeric(value)))
df
View(df)
df = data.frame(tree, subset, value)
as.numeric(value)
mean(as.numeric(value))
df = df %>%
group_by(tree)
df = df %>%
group_by(tree) %>%
summarise(avg_error = mean(as.numeric(value)))
df = data.frame(tree, subset, as.numeric(value))
value = as.numeric(value)
df = data.frame(tree, subset, value)
class(value)
mean(value)
tree = as.numeric(tree)
subset = as.numeric(subset)
value = as.numeric(value)
df = data.frame(tree, subset, value)
df = df %>%
group_by(tree) %>%
summarise(avg_error = mean(value))
tree = as.numeric(tree)
subset = as.numeric(subset)
value = as.numeric(value)
df = data.frame(tree, subset, value)
df = df %>%
filter(subset != 9)
group_by(tree) %>%
summarise(avg_error = mean(value))
df = df %>%
filter(subset != 9) %>%
group_by(tree) %>%
summarise(avg_error = mean(value))
View(df)
plot(df$tree, df$avg_error)
plot(df$tree, df$avg_error,  main ="", xlab = "", ylab = "")
title(main = "Average Squared Error by Number of Boostings", xlab = "Number of Boostings", ylab = "Average Squared Error",
line = NA, outer = FALSE)
plot(df$tree, df$avg_error,  main ="", xlab = "", ylab = "")
title(main = "Average Squared Error by Number of Boostings", xlab = "Number of Boostings", ylab = "Average Squared Error",
line = NA, outer = FALSE)
setwd("~/Desktop/CS221/CS221FinalProject")
data = read.csv("data_house_and_neighborhood")
data = read.csv("data_house_and_neighborhood.csv")
View(data)
summary = data %>% summarise_all(funs(n_distinct(.)))
library(dplyr)
summary = data %>% summarise_all(funs(n_distinct(.)))
summary
View(summary)
data.frame(t(summary))
summary = data.frame(t(summary)) %>%
filter(t.summary. < 5)
summary
data.frame(t(summary))
summary = data %>% summarise_all(funs(n_distinct(.)))
data.frame(t(summary))
summary = data.frame(t(summary))
summary = data %>% summarise_all(funs(n_distinct(.)))
summary = data.frame(t(summary))
summary = data.frame(t(summary))
summary = data %>% summarise_all(funs(n_distinct(.)))
dat.m <- melt(as.data.table(summary, keep.rownames = "Vars"), id.vars = "Vars")
library(tidyverse)
summary = data %>% summarise_all(funs(n_distinct(.)))
dat.m <- melt(as.data.table(summary, keep.rownames = "Vars"), id.vars = "Vars")
help(melt)
library(devtools)
summary = data %>% summarise_all(funs(n_distinct(.)))
dat.m <- melt(as.data.table(summary, keep.rownames = "Vars"), id.vars = "Vars")
library(reshape2)
summary = data %>% summarise_all(funs(n_distinct(.)))
dat.m <- melt(as.data.table(summary, keep.rownames = "Vars"), id.vars = "Vars")
library(tidyr)
summary = data %>% summarise_all(funs(n_distinct(.)))
dat.m <- melt(as.data.table(summary, keep.rownames = "Vars"), id.vars = "Vars")
help(as.data.table)
